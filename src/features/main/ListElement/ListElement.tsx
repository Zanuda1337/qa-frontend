import React, { useState } from 'react';import classes from './ListElement.module.scss';import {  Button,  Checkbox,} from '@mui/material';import { clsx } from 'clsx';import ProgressBar from 'src/components/ProgressBar/ProgressBar';import SvgSelector from 'src/components/SvgSelector/SvgSelector';import { useScreen } from 'src/hooks';import CustomDialogue from 'src/components/CustomDialogue/CustomDialogue';import {useAppSelector, useBoundActions} from 'src/app/hooks';import { resetCategoryProgressAsync } from 'src/features/categories/Categories.slice';type TListElementProps = {  id: number;  title: string;  learned: number;  mastered: number;  total: number;  selected: boolean;  onChange: () => void;};const ListElement: React.FC<TListElementProps> = ({  id,  title,  learned,  mastered,  total,  selected,  onChange,}) => {  const status = useAppSelector(state => state.categoriesReducer.status)  const boundActions = useBoundActions({ resetCategoryProgressAsync });  const learnedProgress = total === 0 ? 0 : (100 / total) * learned;  const masteredProgress = total === 0 ? 0 : (100 / total) * mastered;  const { width } = useScreen();  const [open, setOpen] = useState(false);  const handleClickOpen = () => {    setOpen(true);  };  const handleClose = () => {    setOpen(false);  };  const handleDelete = async () => {    await boundActions.resetCategoryProgressAsync({id});    handleClose();  };  return (    <>      <li>        <Button          className={classes.li}          onClick={(e) => {            e.preventDefault();            onChange();          }}        >          <div className={classes.container}>            <div className={classes.titleContainer}>              <Checkbox onChange={onChange} checked={selected} />              <p className={classes.title}>{title}</p>            </div>            {width < 500 && (              <Button                onClick={(e) => {                  e.stopPropagation();                  handleClickOpen();                }}                className={classes.button}              >                <SvgSelector id="reset" />              </Button>            )}          </div>          <div className={clsx(classes.container, classes.bars)}>            <div>              <span>Прочитано</span>              <ProgressBar progress={learnedProgress} color={'#f3da3e'} />            </div>            <div>              <span>Наизусть</span>              <ProgressBar                progress={masteredProgress}                color={'rgb(65, 104, 229)'}              />            </div>            {width >= 500 && (              <Button                onClick={(e) => {                  e.stopPropagation();                  handleClickOpen();                }}                className={clsx(classes.button, classes.desktop)}              >                <SvgSelector id="reset" />              </Button>            )}          </div>        </Button>      </li>      <CustomDialogue        open={open}        content={          'Весь прогресс по этой теме будет удален. Это действие нельзя будет отменить.'        }        title={'Вы уверены?'}        onClose={handleClose}        onConfirm={handleDelete}        fetching={status === 'loading'}      />    </>  );};export default ListElement;