import { ActionReducerMapBuilder, AnyAction } from '@reduxjs/toolkit';import {  FulfilledAction,  PendingAction,  RejectedAction,  TStateBase,} from 'src/types';export const clamp = (value: number, min: number, max: number): number =>  Math.min(Math.max(value, min), max);export const isPendingAction = (action: AnyAction): action is PendingAction =>  action.type.endsWith('/pending');export const isRejectedAction = (action: AnyAction): action is RejectedAction =>  action.type.endsWith('/rejected');export const isFulfilledAction = (  action: AnyAction): action is FulfilledAction => action.type.endsWith('/fulfilled');export const createReducersHandler = <T extends TStateBase>(  builder: ActionReducerMapBuilder<T>) => {  builder.addMatcher(isPendingAction, (state) => {    state.status = 'loading';    state.message = '';  });  builder.addMatcher(isRejectedAction, (state, { payload }) => {    state.message = payload;    state.status = 'failed';  });  builder.addMatcher(isFulfilledAction, (state) => {    state.status = 'idle';  });};export const toggleArray = <Type>(array: Type[], value: Type): Type[] => {  if (array.includes(value)) return array.filter((item) => item !== value);  return [...array, value];};